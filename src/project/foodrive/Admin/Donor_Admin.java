/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.foodrive.Admin;

import com.mysql.jdbc.StandardLoadBalanceExceptionChecker;
import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import project.foodrive.Joinus;
import project.foodrive.MyConnection;

/**
 *
 * @author INTEL COREi3
 */
public class Donor_Admin extends javax.swing.JFrame {
    
    private int validate_all=5;
    public Donor_Admin() {
        initComponents();
        load_cities();
        
    }
    public void load_cities(){
        try {
            Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            Statement st = c.createStatement();
            String s = "SELECT DISTINCT country FROM area;";
            ResultSet rs = st.executeQuery(s);
            while(rs.next()){
                country_cb.addItem(rs.getString("country"));
                
            }
            country_cb.setSelectedItem("India");
            state_cb.setSelectedItem("Maharashtra");
            city_cb.setSelectedItem("Pune");
            
        }  catch (SQLException ex) {
            Logger.getLogger(Donor_Admin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private boolean check_regex(String regex,String inpuString){
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(inpuString);
        if(matcher.matches()){
            return true;
        }
        else{
            return false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        dname_label = new javax.swing.JLabel();
        dname_text = new javax.swing.JTextField();
        dtype_label = new javax.swing.JLabel();
        daddress_label = new javax.swing.JLabel();
        daddress_text = new javax.swing.JTextField();
        dphone_label = new javax.swing.JLabel();
        d_phone_text = new javax.swing.JTextField();
        dalt_phone_label = new javax.swing.JLabel();
        dalt_phone_text = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Title_label = new javax.swing.JLabel();
        add_donor = new javax.swing.JButton();
        cancel_donor = new javax.swing.JButton();
        dtype_combobox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        demail_text = new javax.swing.JTextField();
        country_cb = new javax.swing.JComboBox<>();
        state_cb = new javax.swing.JComboBox<>();
        city_cb = new javax.swing.JComboBox<>();
        emaill_label3 = new javax.swing.JLabel();
        emaill_label2 = new javax.swing.JLabel();
        emaill_label1 = new javax.swing.JLabel();
        emaill_label4 = new javax.swing.JLabel();
        area_cb = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 550));
        setResizable(false);

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setWheelScrollingEnabled(false);

        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setMaximumSize(new java.awt.Dimension(845, 32767));
        jPanel1.setMinimumSize(new java.awt.Dimension(845, 547));
        jPanel1.setPreferredSize(new java.awt.Dimension(845, 547));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setMinimumSize(new java.awt.Dimension(500, 493));

        dname_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dname_label.setText("Donor Name");

        dname_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dname_text.setPreferredSize(new java.awt.Dimension(250, 24));
        dname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dname_textFocusLost(evt);
            }
        });
        dname_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dname_textActionPerformed(evt);
            }
        });

        dtype_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dtype_label.setText("Type ");

        daddress_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        daddress_label.setText("Address ");

        daddress_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        daddress_text.setMinimumSize(new java.awt.Dimension(250, 24));
        daddress_text.setPreferredSize(new java.awt.Dimension(250, 24));
        daddress_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                daddress_textFocusLost(evt);
            }
        });
        daddress_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daddress_textActionPerformed(evt);
            }
        });

        dphone_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dphone_label.setText("Phone ");

        d_phone_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        d_phone_text.setMinimumSize(new java.awt.Dimension(250, 24));
        d_phone_text.setPreferredSize(new java.awt.Dimension(250, 24));
        d_phone_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                d_phone_textFocusLost(evt);
            }
        });

        dalt_phone_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dalt_phone_label.setText("Alternate Phone");

        dalt_phone_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dalt_phone_text.setMinimumSize(new java.awt.Dimension(250, 24));
        dalt_phone_text.setPreferredSize(new java.awt.Dimension(250, 24));
        dalt_phone_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dalt_phone_textFocusLost(evt);
            }
        });
        dalt_phone_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dalt_phone_textActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_wht_bg_small.PNG"))); // NOI18N

        Title_label.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        Title_label.setText("Add New Donor");

        add_donor.setBackground(new java.awt.Color(67, 134, 250));
        add_donor.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        add_donor.setForeground(new java.awt.Color(255, 255, 255));
        add_donor.setText("Add");
        add_donor.setContentAreaFilled(false);
        add_donor.setMaximumSize(new java.awt.Dimension(51, 30));
        add_donor.setMinimumSize(new java.awt.Dimension(51, 30));
        add_donor.setOpaque(true);
        add_donor.setPreferredSize(new java.awt.Dimension(51, 30));
        add_donor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_donorActionPerformed(evt);
            }
        });

        cancel_donor.setBackground(new java.awt.Color(67, 134, 250));
        cancel_donor.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cancel_donor.setForeground(new java.awt.Color(255, 255, 255));
        cancel_donor.setText("Cancel");
        cancel_donor.setToolTipText("");
        cancel_donor.setBorder(null);
        cancel_donor.setBorderPainted(false);
        cancel_donor.setContentAreaFilled(false);
        cancel_donor.setMaximumSize(new java.awt.Dimension(51, 25));
        cancel_donor.setMinimumSize(new java.awt.Dimension(51, 25));
        cancel_donor.setOpaque(true);
        cancel_donor.setPreferredSize(new java.awt.Dimension(51, 30));
        cancel_donor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_donorActionPerformed(evt);
            }
        });

        dtype_combobox.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dtype_combobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Individual", "Restaurant", "FoodBank" }));
        dtype_combobox.setMinimumSize(new java.awt.Dimension(250, 24));
        dtype_combobox.setPreferredSize(new java.awt.Dimension(250, 24));
        dtype_combobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dtype_comboboxActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel1.setText("Email");

        demail_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        demail_text.setPreferredSize(new java.awt.Dimension(250, 24));
        demail_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                demail_textFocusLost(evt);
            }
        });

        country_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        country_cb.setMaximumSize(new java.awt.Dimension(250, 24));
        country_cb.setMinimumSize(new java.awt.Dimension(250, 24));
        country_cb.setName(""); // NOI18N
        country_cb.setPreferredSize(new java.awt.Dimension(250, 24));
        country_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                country_cbItemStateChanged(evt);
            }
        });
        country_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                country_cbActionPerformed(evt);
            }
        });

        state_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        state_cb.setMinimumSize(new java.awt.Dimension(250, 24));
        state_cb.setPreferredSize(new java.awt.Dimension(250, 24));
        state_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                state_cbItemStateChanged(evt);
            }
        });
        state_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state_cbActionPerformed(evt);
            }
        });

        city_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        city_cb.setMinimumSize(new java.awt.Dimension(250, 24));
        city_cb.setPreferredSize(new java.awt.Dimension(250, 24));
        city_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                city_cbItemStateChanged(evt);
            }
        });

        emaill_label3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label3.setText("City");

        emaill_label2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label2.setText("State");

        emaill_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label1.setText("Country");

        emaill_label4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label4.setText("Area");

        area_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        area_cb.setMinimumSize(new java.awt.Dimension(250, 24));
        area_cb.setPreferredSize(new java.awt.Dimension(250, 24));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(dname_label)
                                .addGap(53, 53, 53)
                                .addComponent(dname_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Title_label)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dtype_label))
                                    .addGap(62, 62, 62)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(demail_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(dtype_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emaill_label1)
                                    .addComponent(emaill_label2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(state_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(country_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emaill_label3)
                                    .addComponent(daddress_label)
                                    .addComponent(emaill_label4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(city_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(daddress_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(area_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(add_donor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cancel_donor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dphone_label)
                                    .addComponent(dalt_phone_label))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(d_phone_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(dalt_phone_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(54, 54, 54))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Title_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dname_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dname_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(demail_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dtype_label)
                    .addComponent(dtype_combobox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(country_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emaill_label1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(state_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(emaill_label2))
                        .addGap(36, 36, 36))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(city_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emaill_label3, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emaill_label4)
                    .addComponent(area_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daddress_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(daddress_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dphone_label)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(d_phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dalt_phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dalt_phone_label))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_donor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancel_donor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(160, 30, 500, 493);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg.png"))); // NOI18N
        jLabel2.setText("kj");
        jLabel2.setMaximumSize(new java.awt.Dimension(850, 550));
        jLabel2.setMinimumSize(new java.awt.Dimension(850, 550));
        jLabel2.setPreferredSize(new java.awt.Dimension(850, 550));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 850, 550);

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        setSize(new java.awt.Dimension(866, 589));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void dname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, dname_text.getText());

        if(isValid)
        {
            
            if(dname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
             dname_text.setBackground(new Color(170, 253, 197));
        }
        else{
           
           
            if(dname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
             dname_text.setBackground(new Color(255, 186, 187));
        }
    }//GEN-LAST:event_dname_textFocusLost

    private void dname_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dname_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dname_textActionPerformed

    private void daddress_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_daddress_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, daddress_text.getText());

        if(isValid)
        {
           
            if(daddress_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
             daddress_text.setBackground(new Color(170, 253, 197));
        }
        else{
           
            if(daddress_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
             daddress_text.setBackground(new Color(255, 186, 187));
        }
    }//GEN-LAST:event_daddress_textFocusLost

    private void daddress_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daddress_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_daddress_textActionPerformed

    private void d_phone_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_d_phone_textFocusLost
        // TODO add your handling code here:

        String regex = "\\d{10}";

        boolean isValid=check_regex(regex, d_phone_text.getText());

        if(isValid)
        {
            
            if(d_phone_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            d_phone_text.setBackground(new Color(170, 253, 197));
        }
        else{
          
            if(d_phone_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
              d_phone_text.setBackground(new Color(255, 186, 187));
        }
    }//GEN-LAST:event_d_phone_textFocusLost

    private void dalt_phone_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dalt_phone_textFocusLost
        // TODO add your handling code here:
        String regex = "\\d{10}";

        boolean isValid=check_regex(regex, dalt_phone_text.getText());
        if(dalt_phone_text.getText().length()==0)
        {
            isValid=true;
        }
        if(isValid)
        {
           
            if(dalt_phone_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
             dalt_phone_text.setBackground(new Color(170, 253, 197));
        }
        else{
           
            if(dalt_phone_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
             dalt_phone_text.setBackground(new Color(255, 186, 187));
        }
        
    }//GEN-LAST:event_dalt_phone_textFocusLost

    private void add_donorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_donorActionPerformed
        
         
        try
        {
            if(validate_all==0)
            {    
            String alt_phone="NULL";
            if(dalt_phone_text.getText().length()!=0)
            alt_phone="'"+dalt_phone_text.getText()+"'";
            //Data to be inserted
            int Points=0;
            
            //Connect Database Block
           Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            Statement st = c.createStatement();
            //Query for insert into member
            String query="INSERT INTO donor(donor_id,donor_name,email,address_line,city,state,country,type,phone,alternate_phone,area_id) " +
            "VALUES(NULL,'"+dname_text.getText()+"','"+demail_text.getText()+"','"+daddress_text.getText()+"','"+city_cb.getSelectedItem().toString()+"',"
                    + "'"+state_cb.getSelectedItem().toString()+"','"+country_cb.getSelectedItem().toString()+"','"+dtype_combobox.getSelectedItem().toString()+"',"+
            "'"+d_phone_text.getText()+"','"+dalt_phone_text.getText()+"',NULL);";
            System.out.println("Runnung Query");
            //Execute query
                System.out.println(query);
            st.executeUpdate(query);
            System.out.println("Done");
            Component j = null;
            JOptionPane.showMessageDialog(j, "Donor Added Successfully..!");
            }
            else{
                if(validate_all!=0){
                    JOptionPane.showMessageDialog(null,"Enterered data is not correct!..");
                }
                System.out.println(""+validate_all);
            }
       }

        catch (Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error while Adding Donor..!");
        }
        
    }//GEN-LAST:event_add_donorActionPerformed

    private void cancel_donorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_donorActionPerformed
         dispose();
    }//GEN-LAST:event_cancel_donorActionPerformed

    private void dtype_comboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dtype_comboboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dtype_comboboxActionPerformed

    private void dalt_phone_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dalt_phone_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dalt_phone_textActionPerformed

    private void demail_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_demail_textFocusLost
       String regex = "^(.+)@(.+)[.](.+)";

        boolean isValid=check_regex(regex, demail_text.getText());

        if(isValid)
        {
           
            if(demail_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
             demail_text.setBackground(new Color(170, 253, 197));
        }
        else{
           
            if(demail_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
             demail_text.setBackground(new Color(255, 186, 187));
        }
    }//GEN-LAST:event_demail_textFocusLost

    private void country_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_country_cbItemStateChanged
        // TODO add your handling code here:
        if(country_cb.getSelectedItem() != null){

            try {
                String country=country_cb.getSelectedItem().toString();
                Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT state FROM area WHERE country='"+country+"';";
                ResultSet rs = st.executeQuery(s);
                state_cb.removeAllItems();
                while(rs.next()){
                    state_cb.addItem(rs.getString("state"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Donor_Admin.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_country_cbItemStateChanged

    private void country_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_country_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_country_cbActionPerformed

    private void state_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_state_cbItemStateChanged
        // TODO add your handling code here:
        if(state_cb.getSelectedItem() != null){

            try {
                String state=state_cb.getSelectedItem().toString();
                 Connection c=null;
                 MyConnection mo= new MyConnection(); 
                 c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT city FROM area WHERE state='"+state+"';";
                ResultSet rs = st.executeQuery(s);
                city_cb.removeAllItems();
                while(rs.next()){
                    city_cb.addItem(rs.getString("city"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Donor_Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_state_cbItemStateChanged

    private void state_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state_cbActionPerformed

    private void city_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_city_cbItemStateChanged
        // TODO add your handling code here:
        if(city_cb.getSelectedItem() != null){
            
            try {
                String city=city_cb.getSelectedItem().toString();
                Connection c=null;
                 MyConnection mo= new MyConnection(); 
                 c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT area FROM area WHERE city='"+city+"';";
                ResultSet rs = st.executeQuery(s);
                area_cb.removeAllItems();
                while(rs.next()){
                    area_cb.addItem(rs.getString("area"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Donor_Admin.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_city_cbItemStateChanged
/**/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Donor_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Donor_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Donor_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Donor_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Donor_Admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title_label;
    private javax.swing.JButton add_donor;
    private javax.swing.JComboBox<String> area_cb;
    private javax.swing.JButton cancel_donor;
    private javax.swing.JComboBox<String> city_cb;
    private javax.swing.JComboBox<String> country_cb;
    private javax.swing.JTextField d_phone_text;
    private javax.swing.JLabel daddress_label;
    private javax.swing.JTextField daddress_text;
    private javax.swing.JLabel dalt_phone_label;
    private javax.swing.JTextField dalt_phone_text;
    private javax.swing.JTextField demail_text;
    private javax.swing.JLabel dname_label;
    private javax.swing.JTextField dname_text;
    private javax.swing.JLabel dphone_label;
    private javax.swing.JComboBox<String> dtype_combobox;
    private javax.swing.JLabel dtype_label;
    private javax.swing.JLabel emaill_label1;
    private javax.swing.JLabel emaill_label2;
    private javax.swing.JLabel emaill_label3;
    private javax.swing.JLabel emaill_label4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> state_cb;
    // End of variables declaration//GEN-END:variables
}
