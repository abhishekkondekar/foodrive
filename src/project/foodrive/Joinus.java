/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.foodrive;

import java.awt.Color;
import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import project.foodrive.Admin.Add_volunteer;
import static java.lang.String.format;

/**
 *
 * @author INTEL COREi3
 */
public class Joinus extends javax.swing.JFrame {

    /**
     * Creates new form Joinus
     */
    private int validate_all=10;
    public Joinus() {
        initComponents();
        load_cities();
        
    }
    
    public int getAreaId(Connection c){
        try {
            Statement s=c.createStatement();
            String select_area_id="SELECT area_id FROM area "
                    + "WHERE country='"+country_cb.getSelectedItem().toString()+"' "
                    + "AND state = '"+state_cb.getSelectedItem().toString()+"'"
                    + "AND city = '"+city_cb.getSelectedItem().toString()+"'"
                    + "AND area_name = '"+area_cb.getSelectedItem().toString()+"';";
            ResultSet rs=s.executeQuery(select_area_id);
            rs.next();
            int area_id=rs.getInt("area_id");
            return area_id;
        } catch (SQLException ex) {
            Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    }
    
    public void load_cities(){
        try {
            Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            Statement st = c.createStatement();
            String s = "SELECT DISTINCT country FROM area;";
            ResultSet rs = st.executeQuery(s);
            while(rs.next()){
                country_cb.addItem(rs.getString("country"));
                
            }
            country_cb.setSelectedItem("India");
            state_cb.setSelectedItem("Maharashtra");
            city_cb.setSelectedItem("Pune");
            
        } catch (SQLException ex) {
            Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
     private boolean check_regex(String regex,String inpuString){
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(inpuString);
        if(matcher.matches()){
            return true;
        }
        else{
            return false;
        }
    }
    /**

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        fname_label = new javax.swing.JLabel();
        fname_text = new javax.swing.JTextField();
        mname_label = new javax.swing.JLabel();
        mname_text = new javax.swing.JTextField();
        lname_label = new javax.swing.JLabel();
        lname_text = new javax.swing.JTextField();
        gender_label = new javax.swing.JLabel();
        dob_label = new javax.swing.JLabel();
        phone_label = new javax.swing.JLabel();
        phone_text = new javax.swing.JTextField();
        alt_phone_label = new javax.swing.JLabel();
        alt_phone_text = new javax.swing.JTextField();
        emaill_label = new javax.swing.JLabel();
        email_text = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        Title_label = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        gender_cb = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        phone_label1 = new javax.swing.JLabel();
        age_textField = new javax.swing.JTextField();
        city_cb = new javax.swing.JComboBox<>();
        state_cb = new javax.swing.JComboBox<>();
        country_cb = new javax.swing.JComboBox<>();
        uname_text = new javax.swing.JTextField();
        alt_phone_label1 = new javax.swing.JLabel();
        alt_phone_label2 = new javax.swing.JLabel();
        pass_text = new javax.swing.JPasswordField();
        jLabel2 = new javax.swing.JLabel();
        emaill_label1 = new javax.swing.JLabel();
        emaill_label2 = new javax.swing.JLabel();
        emaill_label3 = new javax.swing.JLabel();
        area_cb = new javax.swing.JComboBox<>();
        emaill_label4 = new javax.swing.JLabel();
        pass_retype_text = new javax.swing.JPasswordField();
        alt_phone_label3 = new javax.swing.JLabel();
        error_msg_bottom_lb = new javax.swing.JLabel();
        emaill_label5 = new javax.swing.JLabel();
        occupation = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 550));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setWheelScrollingEnabled(false);

        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setMaximumSize(new java.awt.Dimension(850, 665));
        jPanel1.setMinimumSize(new java.awt.Dimension(850, 665));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(850, 665));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setMinimumSize(new java.awt.Dimension(500, 660));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 660));

        fname_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        fname_label.setText("First Name ");

        fname_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        fname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                fname_textFocusLost(evt);
            }
        });
        fname_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fname_textActionPerformed(evt);
            }
        });

        mname_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mname_label.setText("Middle Name ");

        mname_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        mname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                mname_textFocusLost(evt);
            }
        });
        mname_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mname_textActionPerformed(evt);
            }
        });

        lname_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lname_label.setText("Last Name ");

        lname_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        lname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                lname_textFocusLost(evt);
            }
        });

        gender_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        gender_label.setText("Age ");

        dob_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dob_label.setText("Date of Birth ");

        phone_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        phone_label.setText("Phone ");

        phone_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        phone_text.setPreferredSize(new java.awt.Dimension(6, 25));
        phone_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                phone_textFocusLost(evt);
            }
        });

        alt_phone_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        alt_phone_label.setText("Alternate Phone");

        alt_phone_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        alt_phone_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                alt_phone_textFocusLost(evt);
            }
        });

        emaill_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label.setText("Email Id ");

        email_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        email_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                email_textFocusLost(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_wht_bg_small.PNG"))); // NOI18N
        jLabel9.setPreferredSize(new java.awt.Dimension(144, 40));

        Title_label.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        Title_label.setText("Join Us");

        jButton3.setBackground(new java.awt.Color(67, 134, 250));
        jButton3.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Add");
        jButton3.setContentAreaFilled(false);
        jButton3.setMaximumSize(new java.awt.Dimension(51, 30));
        jButton3.setMinimumSize(new java.awt.Dimension(51, 30));
        jButton3.setOpaque(true);
        jButton3.setPreferredSize(new java.awt.Dimension(51, 30));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(67, 134, 250));
        jButton4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Cancel");
        jButton4.setToolTipText("");
        jButton4.setBorder(null);
        jButton4.setBorderPainted(false);
        jButton4.setContentAreaFilled(false);
        jButton4.setMaximumSize(new java.awt.Dimension(51, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(51, 25));
        jButton4.setOpaque(true);
        jButton4.setPreferredSize(new java.awt.Dimension(51, 30));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        gender_cb.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        gender_cb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female", "Other" }));

        jDateChooser1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jDateChooser1FocusLost(evt);
            }
        });
        jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jDateChooser1PropertyChange(evt);
            }
        });

        phone_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        phone_label1.setText("Gender");

        age_textField.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        age_textField.setEnabled(false);
        age_textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                age_textFieldActionPerformed(evt);
            }
        });

        city_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        city_cb.setPreferredSize(new java.awt.Dimension(31, 25));
        city_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                city_cbItemStateChanged(evt);
            }
        });

        state_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        state_cb.setMinimumSize(new java.awt.Dimension(31, 25));
        state_cb.setPreferredSize(new java.awt.Dimension(31, 25));
        state_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                state_cbItemStateChanged(evt);
            }
        });
        state_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                state_cbActionPerformed(evt);
            }
        });

        country_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        country_cb.setMaximumSize(new java.awt.Dimension(80, 20));
        country_cb.setMinimumSize(new java.awt.Dimension(80, 20));
        country_cb.setName(""); // NOI18N
        country_cb.setPreferredSize(new java.awt.Dimension(80, 25));
        country_cb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                country_cbItemStateChanged(evt);
            }
        });
        country_cb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                country_cbActionPerformed(evt);
            }
        });

        uname_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        uname_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                uname_textFocusLost(evt);
            }
        });

        alt_phone_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        alt_phone_label1.setText("User Name");

        alt_phone_label2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        alt_phone_label2.setText("Password");

        pass_text.setBackground(new java.awt.Color(240, 240, 240));
        pass_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        pass_text.setEnabled(false);
        pass_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pass_textFocusLost(evt);
            }
        });
        pass_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_textActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 14)); // NOI18N
        jLabel2.setText("Where you would like to Work ?");

        emaill_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label1.setText("Country");

        emaill_label2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label2.setText("State");

        emaill_label3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label3.setText("City");

        area_cb.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        area_cb.setPreferredSize(new java.awt.Dimension(31, 25));

        emaill_label4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label4.setText("Area");

        pass_retype_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        pass_retype_text.setEnabled(false);
        pass_retype_text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pass_retype_textActionPerformed(evt);
            }
        });
        pass_retype_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pass_retype_textKeyTyped(evt);
            }
        });

        alt_phone_label3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        alt_phone_label3.setText("Retype Password");

        error_msg_bottom_lb.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        error_msg_bottom_lb.setForeground(new java.awt.Color(204, 0, 0));
        error_msg_bottom_lb.setToolTipText("");

        emaill_label5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        emaill_label5.setText("Occupation");

        occupation.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        occupation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Student", "Working", "Non-working", "Bussiness", "Service", "Other" }));
        occupation.setMaximumSize(new java.awt.Dimension(80, 20));
        occupation.setMinimumSize(new java.awt.Dimension(80, 20));
        occupation.setName(""); // NOI18N
        occupation.setPreferredSize(new java.awt.Dimension(80, 25));
        occupation.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                occupationItemStateChanged(evt);
            }
        });
        occupation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occupationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(error_msg_bottom_lb)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(62, 62, 62))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(Title_label)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(alt_phone_label)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(alt_phone_label1, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(alt_phone_label2, javax.swing.GroupLayout.Alignment.LEADING))
                                                    .addGap(36, 36, 36)))
                                            .addComponent(phone_label, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(alt_phone_label3))
                                        .addGap(12, 12, 12)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(pass_text, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(uname_text, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(alt_phone_text, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(phone_text, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(pass_retype_text)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(phone_label1)
                                                .addGap(84, 84, 84)
                                                .addComponent(gender_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(emaill_label1)
                                            .addComponent(emaill_label2)
                                            .addComponent(emaill_label3)
                                            .addComponent(emaill_label4)
                                            .addComponent(jLabel2)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(emaill_label)
                                                    .addComponent(emaill_label5))
                                                .addGap(55, 55, 55)
                                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(email_text, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(city_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(state_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(country_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(area_cb, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(62, 62, 62))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fname_label)
                                            .addComponent(mname_label)
                                            .addComponent(lname_label))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(mname_text)
                                            .addComponent(lname_text, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(fname_text, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addComponent(dob_label)
                                        .addGap(37, 37, 37)
                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(gender_label)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(age_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(61, 61, 61))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Title_label)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fname_label)
                    .addComponent(fname_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mname_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lname_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lname_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(gender_label)
                        .addComponent(age_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(dob_label)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gender_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phone_label1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(email_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emaill_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emaill_label5)
                    .addComponent(occupation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(country_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emaill_label1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(state_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emaill_label2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(city_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emaill_label3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(area_cb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(emaill_label4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(phone_label))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alt_phone_label)
                    .addComponent(alt_phone_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uname_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alt_phone_label1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alt_phone_label2)
                    .addComponent(pass_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pass_retype_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(alt_phone_label3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(error_msg_bottom_lb))
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(170, 20, 500, 660);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg.png"))); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(0, 0, 850, 600);

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void fname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, fname_text.getText());

        if(isValid)
        {

            if(fname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            fname_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(fname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            fname_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_fname_textFocusLost

    private void fname_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fname_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fname_textActionPerformed

    private void mname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, mname_text.getText());

        if(isValid)
        {
            if(mname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            mname_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(mname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            mname_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_mname_textFocusLost

    private void mname_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mname_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mname_textActionPerformed

    private void lname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lname_textFocusLost
        // TODO add your handling code here:
        String regex = "[a-zA-Z]+";

        boolean isValid=check_regex(regex, lname_text.getText());

        if(isValid)
        {
            if(lname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            lname_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(lname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            lname_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_lname_textFocusLost

    private void phone_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phone_textFocusLost
        // TODO add your handling code here:

        String regex = "\\d{10}";

        boolean isValid=check_regex(regex, phone_text.getText());

        if(isValid)
        {
            if(phone_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            phone_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(phone_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            phone_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_phone_textFocusLost

    private void alt_phone_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_alt_phone_textFocusLost
        // TODO add your handling code here:
        String regex = "\\d{10}";

        boolean isValid=check_regex(regex, alt_phone_text.getText());
        if(alt_phone_text.getText().length()==0)
        {
            isValid=true;
        }
        if(isValid)
        {
            if(alt_phone_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            alt_phone_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(alt_phone_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            alt_phone_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_alt_phone_textFocusLost

    private void email_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_email_textFocusLost
        // TODO add your handling code here:
        String regex = "^(.+)@(.+)[.](.+)";

        boolean isValid=check_regex(regex, email_text.getText());

        if(isValid)
        {
            if(email_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            email_text.setBackground(new Color(170, 253, 197));
        }
        else{
            if(email_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            email_text.setBackground(new Color(255, 186, 187));

        }
    }//GEN-LAST:event_email_textFocusLost

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        try
        {
            if(validate_all==0)
            {
                String alt_phone="NULL";
                if(alt_phone_text.getText().length()!=0)
                alt_phone="'"+alt_phone_text.getText()+"'";
                //Data to be inserted
                int Points=0;
                //String gender=gender_combo_box.getSelectedItem().toString();
                SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd");
                String dob=format.format(jDateChooser1.getDate());

                //System.out.println("Gender "+gender+" DOB : "+dob);
                //Connect Database Block
               Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block
                Statement st=c.createStatement();
                
                //Query for insert into member
                String query="INSERT INTO member(member_id,fname,mname,lname,gender,joindate,dob,email,points,phone,alternate_phone,city,state,country,occupation) " +
                "VALUES(NULL,'"+fname_text.getText()+"','"+mname_text.getText()+"','"+lname_text.getText()+
                "','"+gender_cb.getSelectedItem().toString()+"',NOW(),'"+dob+"'," +
                "'"+email_text.getText()+"',"+Integer.toString(Points)+",'"+phone_text.getText()+"',"+alt_phone+",NULL,NULL,NULL,'"+occupation.getSelectedItem().toString()+"');";
                System.out.println(query);
                //PreparedStatement st = c.prepareStatement(query);
                System.out.println("Runnung Query");
                //Execute query
                st.executeUpdate(query);
                System.out.println("Done");
                //st.close();
                Statement st1=c.createStatement();
                
                //Insert into credentials
                //st.close();
                
                //####Get member Id 
               SimpleDateFormat format1DateFormat=new SimpleDateFormat("yyyy-MM-dd");
            Date now_d = new Date();
            String now=format1DateFormat.format(now_d);
                Statement st3Statement = c.createStatement();
                String s = "SELECT member_id FROM member WHERE fname='"+fname_text.getText()+"' "
                        + "AND lname='"+lname_text.getText()+"' AND joindate = '"+now+"';";
                ResultSet rs = st.executeQuery(s);
                System.out.println(s);
                rs.next();
                int member_id=rs.getInt("member_id");
                //Query for insert into member
                String q_insert_into_credential="INSERT INTO credentials(reference_id,username,u_password,role) " + 
                                                "VALUES("+member_id+",'"+uname_text.getText()+"','"+pass_retype_text.getText()+"','guest');";
                
               
                System.out.println(q_insert_into_credential);
               // PreparedStatement st1 = c.prepareStatement(query1);
                //System.out.println("Runnung Query");
                //Execute query
                st1.executeUpdate(q_insert_into_credential);
                //System.out.println("Done");
                
                
                //Isert In join req
                int area_id=getAreaId(c);
                
                Statement s9=c.createStatement();
                String q_insert_into_join="INSERT INTO team_join_req(req_id,reference_id,area_id,status_flag,role) " + 
                                                "VALUES(NULL,"+member_id+","+area_id+",0,'volunteer');";
                s9.executeUpdate(q_insert_into_join);
                
                Statement s0=c.createStatement();
                String insert_manages="INSERT INTO manages(volunteer_id,monitor_id) VALUES ("+member_id+",NULL)";
                s0.executeUpdate(insert_manages);
                Component j = null;
                JOptionPane.showMessageDialog(j, "Thank You for Registration.You can login after we confirm your account.");
                this.dispose();
            }
            else{

                JOptionPane.showMessageDialog(null,"Enterered data is not correct!..");

                System.out.println(""+validate_all);
            }
            
        }
        
        catch (Exception e)
        {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error while Adding Volunteer..!");
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        dispose();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jDateChooser1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jDateChooser1FocusLost
        // TODO add your handling code here:

    }//GEN-LAST:event_jDateChooser1FocusLost

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        // TODO add your handling code here:
        if(jDateChooser1.getDate()!=null)
        {
            LocalDate now = LocalDate.now();
            SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd");
            String dob=format.format(jDateChooser1.getDate());
            //String now_date=format.format(now);
            long diffInMillies =(new Date().getTime()-jDateChooser1.getDate().getTime());
            long diff = TimeUnit.DAYS.convert(diffInMillies, TimeUnit.MILLISECONDS);
            //System.out.println("Days : "+diff+" Year "+diff/365);
            int yeardiff=(int) (diff/365);
            age_textField.setText(""+yeardiff);
            if(yeardiff>=15)
            {
                if(age_textField.getBackground().getGreen()!=253)
                {
                    validate_all--;
                }
                age_textField.setBackground(new Color(170, 253, 197));
            }
            else
            {
                if(age_textField.getBackground().getGreen()==253)
                {
                    validate_all++;
                }
                age_textField.setBackground(new Color(255, 186, 187));
            }
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void age_textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_age_textFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_age_textFieldActionPerformed

    private void state_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_state_cbItemStateChanged
        // TODO add your handling code here:
        if(state_cb.getSelectedItem() != null){
            
            try {
                String state=state_cb.getSelectedItem().toString();
                Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT city FROM area WHERE state='"+state+"';";
                ResultSet rs = st.executeQuery(s);
                city_cb.removeAllItems();
                while(rs.next()){
                    city_cb.addItem(rs.getString("city"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_state_cbItemStateChanged

    private void country_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_country_cbItemStateChanged
        // TODO add your handling code here:
        if(country_cb.getSelectedItem() != null){
            
            try {
                String country=country_cb.getSelectedItem().toString();
               Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT state FROM area WHERE country='"+country+"';";
                ResultSet rs = st.executeQuery(s);
                state_cb.removeAllItems();
                while(rs.next()){
                    state_cb.addItem(rs.getString("state"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_country_cbItemStateChanged

    private void pass_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass_textActionPerformed

    private void state_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_state_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_state_cbActionPerformed

    private void country_cbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_country_cbActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_country_cbActionPerformed

    private void city_cbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_city_cbItemStateChanged
        // TODO add your handling code here:
        if(city_cb.getSelectedItem() != null){
            
            try {
                String city=city_cb.getSelectedItem().toString();
                Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block

                Statement st = c.createStatement();
                String s = "SELECT DISTINCT area_name FROM area WHERE city='"+city+"';";
                ResultSet rs = st.executeQuery(s);
                area_cb.removeAllItems();
                while(rs.next()){
                    area_cb.addItem(rs.getString("area_name"));

                }
            } catch (SQLException ex) {
                Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_city_cbItemStateChanged

    private void pass_retype_textActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pass_retype_textActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pass_retype_textActionPerformed

    private void uname_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_uname_textFocusLost
        // TODO add your handling code here:
        boolean isValid=false;
        
        try {
                String username=uname_text.getText();
                Connection c=null;
                MyConnection mo= new MyConnection(); 
                c=mo.getMyConnection();
                //Connect Database Block

               
                String query = "SELECT reference_id FROM credentials WHERE username=?;";
                PreparedStatement pst = c.prepareStatement(query);
                pst.setString(1,username);
                ResultSet rs = pst.executeQuery();
                if(rs.next()){
                    isValid=false;
                    System.out.println("Username Not available..");
                    error_msg_bottom_lb.setText("*Username is already taken");
                }
                else
                {
                    isValid=true;
                    error_msg_bottom_lb.setText("");
                }
            } catch (SQLException ex) {
                Logger.getLogger(Joinus.class.getName()).log(Level.SEVERE, null, ex);
                isValid=false;
            }
        
        if(isValid)
        {

            if(uname_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            uname_text.setBackground(new Color(170, 253, 197));
            pass_text.enable();
            
            pass_text.setBackground(Color.white);
            
        }
        else{
            if(uname_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            uname_text.setBackground(new Color(255, 186, 187));
            pass_text.disable();
            
            pass_text.setBackground(new Color(240,240,240));
            
        }
    }//GEN-LAST:event_uname_textFocusLost

    private void pass_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pass_textFocusLost
        // TODO add your handling code here:
        String regex = ".{8,}";

        boolean isValid=check_regex(regex, pass_text.getText());
        if(isValid)
        {

            if(pass_text.getBackground().getGreen()!=253)
            {
                validate_all--;
            }
            pass_text.setBackground(new Color(170, 253, 197));
            error_msg_bottom_lb.setText("");
            pass_retype_text.enable();
            pass_retype_text.setBackground(Color.white);
            
        }
        else{
            if(pass_text.getBackground().getGreen()==253)
            {
                validate_all++;
            }
            pass_text.setBackground(new Color(255, 186, 187));
            error_msg_bottom_lb.setText("*Minimum Password length is 8");
            pass_retype_text.disable();
            pass_retype_text.setBackground(new Color(240,240,240));
        }
    }//GEN-LAST:event_pass_textFocusLost

    private void pass_retype_textKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pass_retype_textKeyTyped
        // TODO add your handling code here:
        boolean isValid=false;
        if(pass_retype_text.getText() != null)
        {
            String pas_str=pass_text.getText();
            String pass_retyped_str=pass_retype_text.getText();
            pass_retyped_str=pass_retyped_str+evt.getKeyChar();
            System.out.println(pas_str.equals(pass_retyped_str));
            if(pas_str.equals(pass_retyped_str))
            {
                isValid=true;
            }
            else{
                isValid=false;
            }
            
            if(isValid)
            {
                if(pass_retype_text.getBackground().getGreen()!=253)
                {
                    validate_all--;
                }
                pass_retype_text.setBackground(new Color(170, 253, 197));
            }
            else
            {
                if(pass_retype_text.getBackground().getGreen()==253)
                {
                    validate_all++;
                }
                pass_retype_text.setBackground(new Color(255, 186, 187));

             }
        }
    }//GEN-LAST:event_pass_retype_textKeyTyped

    private void occupationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_occupationItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationItemStateChanged

    private void occupationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occupationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_occupationActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Joinus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Joinus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Joinus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Joinus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Joinus().setVisible(true);
            }
           
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title_label;
    private javax.swing.JTextField age_textField;
    private javax.swing.JLabel alt_phone_label;
    private javax.swing.JLabel alt_phone_label1;
    private javax.swing.JLabel alt_phone_label2;
    private javax.swing.JLabel alt_phone_label3;
    private javax.swing.JTextField alt_phone_text;
    private javax.swing.JComboBox<String> area_cb;
    private javax.swing.JComboBox<String> city_cb;
    private javax.swing.JComboBox<String> country_cb;
    private javax.swing.JLabel dob_label;
    private javax.swing.JTextField email_text;
    private javax.swing.JLabel emaill_label;
    private javax.swing.JLabel emaill_label1;
    private javax.swing.JLabel emaill_label2;
    private javax.swing.JLabel emaill_label3;
    private javax.swing.JLabel emaill_label4;
    private javax.swing.JLabel emaill_label5;
    private javax.swing.JLabel error_msg_bottom_lb;
    private javax.swing.JLabel fname_label;
    private javax.swing.JTextField fname_text;
    private javax.swing.JComboBox<String> gender_cb;
    private javax.swing.JLabel gender_label;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lname_label;
    private javax.swing.JTextField lname_text;
    private javax.swing.JLabel mname_label;
    private javax.swing.JTextField mname_text;
    private javax.swing.JComboBox<String> occupation;
    private javax.swing.JPasswordField pass_retype_text;
    private javax.swing.JPasswordField pass_text;
    private javax.swing.JLabel phone_label;
    private javax.swing.JLabel phone_label1;
    private javax.swing.JTextField phone_text;
    private javax.swing.JComboBox<String> state_cb;
    private javax.swing.JTextField uname_text;
    // End of variables declaration//GEN-END:variables
}
