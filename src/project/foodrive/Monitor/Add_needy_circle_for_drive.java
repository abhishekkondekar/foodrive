/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.foodrive.Monitor;

import Testing.*;
import java.awt.Color;
import project.foodrive.Monitor.*;
import static java.lang.String.format;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.concurrent.TimeUnit;
import project.foodrive.MyConnection;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/**
 *
 * @author INTEL COREi3
 */
public class Add_needy_circle_for_drive extends javax.swing.JFrame {

    /**
     * Creates new form Add_drive
     */
     private int validate_all=3;
     private int drive_id=-1;
     private int area_id=-1;
     
    public Add_needy_circle_for_drive() {
        initComponents();
          
    }
    public Add_needy_circle_for_drive(int driveid,int areaid){
        System.out.println(driveid+" "+areaid);
        initComponents();
       
        drive_id=driveid;
        area_id=areaid;
        
        load_cities();
    }
    
    public void load_cities(){
        try {
            Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            
            String s = "SELECT DISTINCT address_line FROM needy_circle WHERE area_id=?;";
            PreparedStatement pst= c.prepareStatement(s);
            pst.setInt(1, area_id);
            ResultSet rs = pst.executeQuery();
            while(rs.next()){
                address_line_cb.addItem(rs.getString("address_line"));
                System.out.println(rs.getString("address_line"));
            }
            
            s = "SELECT food_quantity FROM collects_food_from WHERE drive_id=?;";
            pst= c.prepareStatement(s);
            pst.setInt(1, drive_id);
            rs = pst.executeQuery();
            while(rs.next()){
                food_q_text.setText(""+rs.getInt("food_quantity"));
                
            }
            c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public int getCircleId(Connection c){
        try {
            
            Statement s=c.createStatement();
            String select_circle_id="SELECT circle_id FROM needy_circle "
                    + "WHERE address_line='"+address_line_cb.getSelectedItem().toString()+"' "
                    + "AND landmark = '"+landmark_cb.getSelectedItem().toString()+"';";
            ResultSet rs=s.executeQuery(select_circle_id);
            rs.next();
            int circle_id=rs.getInt("circle_id");
            System.out.println("Circle_id:"+circle_id);
            return circle_id;
          
        } catch (SQLException ex) {
            Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(Level.SEVERE, null, ex);
        }
        return 0;
    }
        
    private boolean check_regex(String regex,String inpuString){
        Pattern pattern = Pattern.compile(regex);
        Matcher matcher = pattern.matcher(inpuString);
        if(matcher.matches()){
            return true;
        }
        else{
            return false;
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        dname_label = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Title_label = new javax.swing.JLabel();
        add_donor = new javax.swing.JButton();
        cancel_donor = new javax.swing.JButton();
        daddress_label1 = new javax.swing.JLabel();
        error_msg = new javax.swing.JLabel();
        dname_label1 = new javax.swing.JLabel();
        max_vol_text = new javax.swing.JTextField();
        address_line_cb = new javax.swing.JComboBox<>();
        landmark_cb = new javax.swing.JComboBox<>();
        food_q_text = new javax.swing.JTextField();
        daddress_label2 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(850, 550));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane1.setViewportBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(850, 550));
        jScrollPane1.setWheelScrollingEnabled(false);

        jPanel1.setInheritsPopupMenu(true);
        jPanel1.setMaximumSize(new java.awt.Dimension(845, 32767));
        jPanel1.setMinimumSize(new java.awt.Dimension(845, 547));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setPreferredSize(new java.awt.Dimension(500, 312));

        dname_label.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dname_label.setText("Address Line");

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo_wht_bg_small.PNG"))); // NOI18N

        Title_label.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        Title_label.setText("Drive : Select Needy Circle");

        add_donor.setBackground(new java.awt.Color(67, 134, 250));
        add_donor.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        add_donor.setForeground(new java.awt.Color(255, 255, 255));
        add_donor.setText("Add");
        add_donor.setContentAreaFilled(false);
        add_donor.setMaximumSize(new java.awt.Dimension(51, 30));
        add_donor.setMinimumSize(new java.awt.Dimension(51, 30));
        add_donor.setOpaque(true);
        add_donor.setPreferredSize(new java.awt.Dimension(51, 30));
        add_donor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_donorActionPerformed(evt);
            }
        });

        cancel_donor.setBackground(new java.awt.Color(67, 134, 250));
        cancel_donor.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        cancel_donor.setForeground(new java.awt.Color(255, 255, 255));
        cancel_donor.setText("Cancel");
        cancel_donor.setToolTipText("");
        cancel_donor.setBorder(null);
        cancel_donor.setBorderPainted(false);
        cancel_donor.setContentAreaFilled(false);
        cancel_donor.setMaximumSize(new java.awt.Dimension(51, 25));
        cancel_donor.setMinimumSize(new java.awt.Dimension(51, 25));
        cancel_donor.setOpaque(true);
        cancel_donor.setPreferredSize(new java.awt.Dimension(51, 30));
        cancel_donor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel_donorActionPerformed(evt);
            }
        });

        daddress_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        daddress_label1.setText("Max Volunteers");

        error_msg.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        error_msg.setForeground(new java.awt.Color(204, 0, 0));

        dname_label1.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        dname_label1.setText("Landmark");

        max_vol_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        max_vol_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                max_vol_textFocusLost(evt);
            }
        });

        address_line_cb.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        address_line_cb.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                address_line_cbPropertyChange(evt);
            }
        });

        landmark_cb.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N

        food_q_text.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        food_q_text.setEnabled(false);
        food_q_text.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                food_q_textFocusLost(evt);
            }
        });

        daddress_label2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        daddress_label2.setText("Food quantity");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(Title_label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(daddress_label2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(food_q_text, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(dname_label, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(dname_label1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(53, 53, 53)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(landmark_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(address_line_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                        .addComponent(error_msg)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(add_donor, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cancel_donor, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)))
                                .addGap(5, 5, 5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(daddress_label1)
                                .addGap(70, 70, 70)
                                .addComponent(max_vol_text, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(102, 102, 102))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(74, 74, 74)
                .addComponent(jLabel9)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(2, 2, 2)
                .addComponent(Title_label)
                .addGap(24, 24, 24)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dname_label)
                    .addComponent(address_line_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dname_label1)
                    .addComponent(landmark_cb, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(food_q_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(daddress_label2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(daddress_label1)
                    .addComponent(max_vol_text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(error_msg)
                        .addGap(0, 30, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancel_donor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(add_donor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(170, 100, 500, 312);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bg.png"))); // NOI18N
        jLabel2.setText("kj");
        jLabel2.setMaximumSize(new java.awt.Dimension(850, 550));
        jLabel2.setMinimumSize(new java.awt.Dimension(850, 550));
        jLabel2.setPreferredSize(new java.awt.Dimension(850, 550));
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 850, 550);

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void add_donorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_donorActionPerformed
        
       
        try{
        
            Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            
            String s = "INSERT INTO distribute_to (drive_id, circle_id, food_quantity, decided_time, distribution_flag) VALUES (?, ?, ?, NOW(), 'decided');";
            PreparedStatement pst= c.prepareStatement(s);
            pst.setInt(1, drive_id);
            int cir_id=getCircleId(c);
            pst.setInt(2, cir_id);
            pst.setInt(3, Integer.parseInt(food_q_text.getText()));
          
            pst.executeUpdate();
            
            s = "UPDATE drive SET status='Needy_Circle_Confirmed',max_volunteers=? WHERE drive_id=?;";
            pst= c.prepareStatement(s);
            pst.setInt(1, Integer.parseInt(max_vol_text.getText()));
            pst.setInt(2, drive_id);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Circle Selected Successfully..!");
            c.close();
            this.dispose();
         }catch(Exception e){
            
             e.printStackTrace();
             JOptionPane.showMessageDialog(null, e.getMessage());
             System.out.println(e);
         }
       
        
    }//GEN-LAST:event_add_donorActionPerformed

    private void cancel_donorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel_donorActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancel_donorActionPerformed

    private void max_vol_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_max_vol_textFocusLost
        // TODO add your handling code here:
        
    }//GEN-LAST:event_max_vol_textFocusLost

    private void address_line_cbPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_address_line_cbPropertyChange
        // TODO add your handling code here:
        if(address_line_cb.getSelectedItem()!=null){
            
        
        try {
          
            Connection c=null;
            MyConnection mo= new MyConnection(); 
            c=mo.getMyConnection();
            //Connect Database Block
            
            
            String s = "SELECT DISTINCT landmark FROM needy_circle WHERE area_id=? AND address_line=?;";
            PreparedStatement pst= c.prepareStatement(s);
            pst.setInt(1,area_id);
            pst.setString(2, address_line_cb.getSelectedItem().toString());
            System.out.println("addressLine");
            System.out.println(address_line_cb.getSelectedItem().toString());
            ResultSet rs = pst.executeQuery();
            landmark_cb.removeAllItems();
            while(rs.next()){
                landmark_cb.addItem(rs.getString("landmark"));
                
            }
            //c.close();
            
        } catch (SQLException ex) {
            Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_address_line_cbPropertyChange

    private void food_q_textFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_food_q_textFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_food_q_textFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Add_needy_circle_for_drive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Add_needy_circle_for_drive().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Title_label;
    private javax.swing.JButton add_donor;
    private javax.swing.JComboBox<String> address_line_cb;
    private javax.swing.JButton cancel_donor;
    private javax.swing.JLabel daddress_label1;
    private javax.swing.JLabel daddress_label2;
    private javax.swing.JLabel dname_label;
    private javax.swing.JLabel dname_label1;
    private javax.swing.JLabel error_msg;
    private javax.swing.JTextField food_q_text;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> landmark_cb;
    private javax.swing.JTextField max_vol_text;
    // End of variables declaration//GEN-END:variables

    
}
